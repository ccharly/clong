## It seems that windows does not support `c++`, even though `cpp` works fine
language: cpp

## Platforms setup
matrix:
    include:
        - os: linux
          env:
            - TOOLSET_CXX=g++-8
        - os: linux
          env:
            - TOOLSET_CXX=clang++-6.0
        - os: windows
          env:
            - TOOLSET_CXX=cl.exe
        - os: osx
          env:
            - TOOLSET_CXX=clang++

## For some reason, default osx image is not working with homebrew
osx_image: xcode10.2

## Configure packages sources
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty-6.0

## Install step
install:
    - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
        export CMAKE_ARGS="-A x64 -DCMAKE_BUILD_TYPE=Release";
        export CMAKE_BUILD_ARGS="--config Release";
        export CTEST_ARGS="-C Release";
        git clone git@github.com:ccharly/clong.llvm-clang-8.0.0-win64-msvc-release-minimal.git llvm-clang-msvc;
      fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        sudo apt update;
        sudo apt install llvm-dev libclang-dev g++-8 clang-6.0 -y;
      fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        brew install llvm;
      fi

## Build
script:
  - mkdir build
  - cd build
  - cmake .. -DCMAKE_CXX_COMPILER=$TOOLSET_CXX -DIS_TRAVIS=ON $CMAKE_ARGS
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
      cp _install/bin/gtest*.dll .;
    fi
  - cmake --build . $CMAKE_BUILD_ARGS
  - cmake --build . --target tests $CMAKE_BUILD_ARGS
  - ctest . $CTEST_ARGS
